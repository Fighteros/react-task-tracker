{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/About.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","showPropAddTask","location","useLocation","pathname","Footer","class","to","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","day","Tasks","tasks","map","index","About","AddTask","onAdd","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","value","onChange","target","placeholder","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","deleteTask","method","filter","toggleReminder","taskToToggle","updTask","headers","body","JSON","stringify","addTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6e6cc59.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n    return (\r\n        <button onClick={onClick} style={{ backgroundColor: color }} className=\"btn\">{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    colo: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst Header = ({ title, onClick, showPropAddTask }) => {\r\n    /*     const onClick = () => {\r\n            console.log('click');\r\n        } */\r\n    const location = useLocation()\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            {location.pathname === '/' && <Button color={showPropAddTask ? 'red' : 'green'} text={showPropAddTask ? 'Cancel' : 'Add'} onClick={onClick} />}\r\n        </header>\r\n    )\r\n}\r\n\r\n// in-case i didn't send anything\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker'\r\n}\r\n\r\n// object \r\n// warngs in the console if the sent value isn't as the\r\n// set datatype \r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n// CSS in JS\r\n// const headingStyle = {\r\n//     color: 'red',\r\n//     backgroundColor: 'black'\r\n// }\r\n\r\n\r\nexport default Header\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer class=\"footer\">\r\n            <p>Copyright &copy; 2021</p>\r\n            <Link to=\"/about\">About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3 key={task.id}>{task.text}<FaTimes onClick={() => onDelete(task.id)} style={{ color: 'red' }} /></h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task, index) => (\r\n                <Task key={task.id} task={task} onToggle={onToggle} onDelete={onDelete} />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className=\"about\">\r\n            <h4> Version 1.0.0</h4>\r\n            <Link to=\"/\">Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\n\r\nimport { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (!text) {\r\n            alert('Please add task')\r\n            return\r\n        }\r\n        onAdd({ text, day, reminder })\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder='Add Task' />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type=\"text\" value={day} onChange={(e) => setDay(e.target.value)} placeholder='Add Day & time' />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set reminder</label>\r\n                <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n\r\n            <input className=\"btn btn-block\" type='submit' value=\"Save Task\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import Header from './components/Header'\nimport Footer from './components/Footer'\nimport { useState, useEffect } from 'react';\nimport Tasks from './components/Tasks'\nimport About from './components/About'\nimport AddTask from './components/AddTask'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\n\n/* events are stored in the App.js */\n\n\n// import React from 'react'\n\n// lmbda \nconst App = () => {\n  // we wont use .push as state is immutable \n  // we instead use setTask and recreate it\n  const [showAddTask, setShowAddTask] = useState(false)\n  //eslint-disable-next-line\n  const [tasks, setTasks] = useState([])\n\n  // fetch data from backend\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n  }, [])\n\n  // fetch data \n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks/')\n    const data = await res.json()\n    // console.log(data)\n    return data\n  }\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n    // console.log(data)\n    return data\n  }\n\n  // delete a task\n  const deleteTask = async (id) => {\n    // simple request to delete \n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE',\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  // Toggle reminder \n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'Application/json'\n      },\n      body: JSON.stringify(updTask)\n    })\n\n\n    const data = await res.json()\n    // to reload the page after update\n    // window.location.reload(false);\n    setTasks(tasks.map((task) => task.id === id\n      ? { ...task, reminder: !data.reminder } : task)\n    )\n  }\n\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'Application/json'\n      },\n      body: JSON.stringify(task)\n    })\n    const data = await res.json()\n    setTasks([...tasks, data])\n  }\n\n\n  // add task locally it's not a good example anyways\n  // const addTask = (task) => {\n  //   // console.log(task)\n  //   // to get unique random number\n  //   const id = Math.floor(Math.random() * 10000) + 1\n  //   const newTask = { id, ...task }\n  //   setTasks([...tasks, newTask])\n  // }\n\n  // show or hide add Task\n  const toggleAddTask = () => {\n    setShowAddTask(!showAddTask)\n  }\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header onClick={toggleAddTask} showPropAddTask={showAddTask} />\n        {/* {showAddTask && <AddTask onAdd={addTask} />}\n        {tasks.length > 0 ? <Tasks tasks={tasks} onToggle={toggleReminder} onDelete={deleteTask} /> : <h3>No Tasks to show</h3>} */}\n        <Route path='/' exact render={(props) => (<>\n          {showAddTask && <AddTask onAdd={addTask} />}\n          {tasks.length > 0 ? <Tasks tasks={tasks} onToggle={toggleReminder} onDelete={deleteTask} /> : <h3>No Tasks to show</h3>}\n        </>)} />\n        <Route path='/about' component={About} />\n        <Footer />\n      </div>\n    </Router >\n  );\n}\n\n\n// this is just for using classes as view model\n\n// class App extends React.Component {\n//   render() {\n//     return <h1>Hello From Class </h1>\n//   }\n// }\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}